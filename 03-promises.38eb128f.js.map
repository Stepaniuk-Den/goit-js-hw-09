{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA2BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAXgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAGpBA,E,KApCU,CACfQ,KAAMC,SAASC,cAAc,WAGtBF,KAAKG,iBAAiB,UAE/B,SAAuBC,GACrBA,EAAIC,iBAGJ,IAFA,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBd,MAAOkB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEZC,EAAI,EAAGA,EAAID,EAAOE,MAAOD,GAAK,EAAG,CACxC,IAAME,EAAaC,OAAON,EAAMI,OAASE,OAAOL,EAAKG,OAASD,EAE9DtB,EAAcsB,EAAI,EAAGE,GAClBE,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAoCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,OAClE8B,QAAQC,IAAI,uBAAwCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE3DgC,OAAM,SAAAP,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOM,QAAQ,oBAAmCJ,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,OACjE8B,QAAQC,IAAI,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst elements = {\n  form: document.querySelector('.form'),\n};\n\nelements.form.addEventListener('submit', handlerSubmit);\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  for (let i = 0; i < amount.value; i += 1) {\n    const countDelay = Number(delay.value) + Number(step.value) * i;\n\n    createPromise(i + 1, countDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.5;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // console.log('Fulfill');\n      } else {\n        reject({ position, delay });\n        // console.log('Reject');\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","i","value","countDelay","Number","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.38eb128f.js.map"}